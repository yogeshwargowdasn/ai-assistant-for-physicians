1. hospital_management/app/__init__.py:
from flask import Flask
from flask_sqlalchemy import SQLAlchemy
from flask_login import LoginManager
from flask_migrate import Migrate
from config import Config
from dotenv import load_dotenv
import os

# ✅ Load environment variables
load_dotenv()

# ✅ Initialize extensions
db = SQLAlchemy()
login_manager = LoginManager()
login_manager.login_view = 'auth.login'
migrate = Migrate()

# ✅ Import models so they are registered with SQLAlchemy
from app.models import prediction_result



def create_app():
    app = Flask(__name__)
    app.config.from_object(Config)

    # ✅ Ensure the upload folder exists
    if not os.path.exists(app.config['UPLOAD_FOLDER']):
        os.makedirs(app.config['UPLOAD_FOLDER'])

    # ✅ Initialize extensions with app
    db.init_app(app)
    login_manager.init_app(app)
    migrate.init_app(app, db)

    # ✅ Register blueprints
    from app.controllers.auth_controller import auth_bp
    from app.controllers.appointment_controller import appointment_bp
    from app.controllers.report_controller import report_bp
    from app.controllers.ai_controller import ai_bp
    from app.controllers.main_controller import main_bp

    app.register_blueprint(auth_bp)
    app.register_blueprint(appointment_bp)
    app.register_blueprint(report_bp)
    app.register_blueprint(ai_bp)
    app.register_blueprint(main_bp)

    return app

2. hospital_management/run.py:
from app import create_app

app = create_app()

if __name__ == '__main__':
    app.run(debug=True)

3. hospital_management/config.py:
import os

UPLOAD_FOLDER = os.path.join(os.getcwd(), 'uploads')
BASE_DIR = os.path.abspath(os.path.dirname(__file__))

class Config:
    SECRET_KEY = os.environ.get('SECRET_KEY') or 'your_secret_key_here'
    SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(BASE_DIR, 'hospital.db')
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    UPLOAD_FOLDER = os.path.join(BASE_DIR, 'uploads')
    ALLOWED_EXTENSIONS = {'pdf', 'doc', 'docx', 'png', 'jpg', 'jpeg'}
    MAX_CONTENT_LENGTH = 16 * 1024 * 1024  # 16 MB limit for file uploads
    DEBUG = True

